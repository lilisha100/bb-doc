//
// TODO:v.dolia:
//      This file is temporary generated from FINCAD custom sty-files.
//      It's needed for rendering math in sphinx-generated documentation.
//      We need to integrate it into F3 build properly by generating it
//      every time F3 documentation is built. The way it's done for Workstation.
//
//      See:
//         #src/iflayer/web/SConscript.web
//         #src/iflayer/web/scripts/mathjax_config_from_latex.py
//         #doc/external/texlib/sty/productDocCustomPackages.sty
//
MathJax.Hub.Config({
  "fast-preview": {
	  disabled: true
  },
  "HTML-CSS": {
	  imageFont: null
  },
  MMLorHTML: { prefer: { Firefox: "MML" } },
  TeX: {
    Macros: {
      'fdocNewChapter': ['\\chapter{#1}', 1],
      'fdocLabelChapter': ['\\label{fdoc:c:#1}', 1],
      'fdocLabelSection': ['\\label{fdoc:#1:#2}', 2],
      'fdocHypertarget': ['\\hypertarget{fdoc:#1:#2}{}', 2],
      'fdocGenericSection': ['\\section{#1}\\fdocLabelSection{#2}{#3}', 3],
      'fdocFunction': ['\\fdocGenericSection{#1}{f}{#2}', 2],
      'fdocRepository': ['\\fdocGenericSection{The #1 repository}{r}{#2}', 2],
      'fdocRepositoryMember': ['\\item[#2]\\fdocHypertarget{#1}{#2}\\hfill\\\\', 2],
      'fdocRequest': ['\\item[#2]\\fdocHypertarget{#1}{#2}\\hfill\\\\', 2],
      'fdocDelegate': ['\\item[#2]\\fdocHypertarget{#1}{#2}\\hfill\\\\', 2],
      'fdocItem': ['\\fdocGenericSection{#1}{h}{#2}', 2],
      'fdocSubItem': ['\\subsection{#1}\\fdocLabelSection{h}{#2}', 2],
      'fdocSubSubItem': ['\\subsubsection{#1}\\fdocLabelSection{h}{#2}', 2],
      'fdocParam': ['\\fdocGenericSection{#1}{p}{#2}', 2],
      'fdocGenericReference': ['#1~(\\ref{fdoc:#2:#3})', 3],
      'fdocGenericHyperlink': ['\\hyperlink{fdoc:#1:#2}{#2}~(#3)', 3],
      'fdocReferenceChapter': ['\\textbf{#1}~(\\fdocGenericReference{Chap.}{c}{#2})', 2],
      'fdocReferenceFunction': ['\\textbf{#1}~(\\fdocGenericReference{Func.}{f}{#2})', 2],
      'fdocReferenceFunctionArg': ['{\\bf\\em #2}', 2],
      'fdocReferenceRepository': ['{\\fdocGenericReference{Repos.}{r}{#1}}', 1],
      'fdocReferenceRepositoryMember': ['{\\fdocGenericHyperlink{#1}{#2}{Repos. member}}', 2],
      'fdocReferenceRequest': ['{\\fdocGenericHyperlink{#1}{#2}{request}}', 2],
      'fdocReferenceDelegate': ['{\\fdocGenericHyperlink{#1}{#2}{delegated request}}', 2],
      'fdocReferenceItem': ['{\\fdocGenericReference{Sec.}{h}{#1}}', 1],
      'fdocReferenceParam': ['{\\fdocGenericReference{Param.}{p}{#1}}', 1],
      'fdocCitation': ['{\\cite{#1}}', 1],
      'fdocEquationLabel': ['\\label{fdocE:#1}', 1],
      'fdocEquationRef': ['Eq.~(\\ref{fdocE:#1})', 1],
      'fdocFunctionComponentsStart': ' ',
      'fdocFunctionComponentsEnd': ' ',
      'fdocFunctionDescriptionStart': ' ',
      'fdocFunctionDescriptionEnd': ' ',
      'fdocFunctionRequestsStart': ' ',
      'fdocFunctionRequestsEnd': ' ',
      'fdocFunctionExtcodeStart': ' ',
      'fdocFunctionExtcodeEnd': ' ',
      'fdocParamDescription': ' ',
      'fdocFunctionDescriptionLine': ['{\\em{#1}}', 1],
      'fdocFunctionBuildType': ['{\\bf{#1}}', 1],
      'fdocFunctionBuildParamName': ['{\\bf{#1}}', 1],
      'fdocFunctionBuildRepository': ['{{\\em{#1}} repository~(\\fdocReferenceRepository{#2})}', 2],
      'fdocParamListStart': ' ',
      'fdocParamListEnd': ' ',
      'fdocParamDescriptionStart': ' ',
      'fdocParamDescriptionEnd': ' ',
      'fdocParameterDetailsListAtStart': ['#1(', 1],
      'fdocParameterDetailsListAfterLast': ')',
      'fdocParameterDetailsListFirst': ['#1', 4],
      'fdocParameterDetailsListNotFirst': [',\\-#1', 4],
      'fdocParameterDetailsDescHeader': '',
      'fdocParameterDetailsDescFooter': '',
      'fdocDeprecatedMessage': 'This functionality is {\\bf{deprecated}} and may be removed from the library in a future release.',
      'fdocInternalAPIOnlyMessage': 'This functionality (and its documentation) is marked as ``internal only\'\' and therefore {\\bf not present} in any external release of F3.',
      'fdocRepoInput': ['Valid input consists of any member of the {\\bf{#1}} repository (#2).', 2],
      'fdocNoDefaultRepoMembers': 'Upon context creation (\\fdocReferenceItem{context}), this repository is always empty irrespective of any licensing constraints.',
      'fdocOptionalArg': ['\\ifthenelse{\\equal{#1}{}}{}{ [#1]}', 1],
      'fdocParameterDetailsDesc': ['{\\bf #1} (#2) #3\\fdocOptionalArg{#4}', 4],
      'fdocRepositoryDescription': ['{\\em{#1}}', 1],
      'fdocRepRequestsStart': ' ',
      'fdocRepRequestsEnd': ' ',
      'fdocRepMembersStart': ' ',
      'fdocRepMembersEnd': ' ',
      'fdocItemDescription': ['{\\em{#1}}', 1],
      'fdocParamDescDescription': ['{\\em{#1}}', 1],
      'fmRiskReportInfo': 'A full set of the first-order risk exposures with respect to the input market data. For a spot input, the risk exposure is rate of change in the fair value per change in the current value of the spot quote. This is the derivative of the fair value with respect to the current value of the spot quote. For a curve input, the risk report exposures are rates of changes in the fair value per changes in all quotes in the current curve. They are the derivatives of the fair value with respect to all the quotes in the current curve.',
      'fmRiskReportLabelsInfo': 'Labels for identifying columns in the risk report table.',
      'fmSettlementDelayInfo': 'Settlement convention refers to the potential time lag that occurs between the trade and settlement dates. Financial contracts generally have a delay between the execution of a trade and its settlement. This time period is also present between the expiry of an option and its settlement. For example, for an FX forward against USD, the standard date calculation for spot settlement is two business days in the non-dollar currency, and then the first good business day that is common to the currency and New York. The only exception to this convention is USD-CAD which is one Toronto business day, and then the first common business day in Toronto and New York. For an FX option, cash settlement is made in the same manner, with the settlement calculation using the option expiry date as the start of the calculation. The settlement convention affects discounting cash flows and must be considered in the valuation. The \\fincad{} functions allow the specification of various FX rate market conventions that are able to cover most currency pairs available in the market. Regarding the possible input formats, the users can specify the conventions for the two currencies of the FX rate manually, in a combined or separate manner. For the former, two elements can be taken in as maturity descriptor and holiday convention that are shared for both currencies. For the latter, five elements can be taken in as one set of maturity descriptor and holiday convention for the currency one, another set of similar inputs for the currency two and an additional input of holiday convention. This corresponds to the most generic specification of the settlement convention that can be used for cross rate trades, e.g. a CAD-EUR trade that has settlement dates calculated using New York as well as Toronto and Target holidays.',
      'fmRoman': ['\\ensuremath{ \\textrm{#1} }', 1],
      'amp': '&',
      'lt': '\\ensuremath{<}',
      'gt': '\\ensuremath{>}',
      'fmAverage': ['\\ensuremath{ \\fmRoman{avg}\\left(#1\\right) }', 1],
      'fmArithmeticAverage': ['\\ensuremath{ \\frac{1}{n} \\sum_{i=1}^n #1_n }', 1],
      'fmGeometricAverage': ['\\ensuremath{ \\left( \\prod_{i=1}^n #1_n \\right)^{1/n} }', 1],
      'fmAverageWithSubscript': ['\\ensuremath{ \\fmRoman{avg}_{#1} \\left(#2\\right) }', 2],
      'fmMin': ['\\ensuremath{ \\min \\left( #1 \\right) }', 1],
      'fmMinOfTwoElements': ['\\ensuremath{ \\min \\left( #1 , #2 \\right) }', 2],
      'fmMax': ['\\ensuremath{ \\max \\left( #1 \\right) }', 1],
      'fmMaxOfTwoElements': ['\\ensuremath{ \\max \\left( #1 , #2 \\right) }', 2],
      'fmStrictlyGreaterThanList': ['\\ensuremath{ #1_1 < \\ldots < #1_n }', 1],
      'fmRelativeDiff': ['\\ensuremath{ \\left( #1_i - #1_{i-1} \\right) / #1_{i-1} }', 1],
      'fmAbsoluteDiff': ['\\ensuremath{ #1_i - #1_{i-1} }', 1],
      'supth': ['\\ensuremath{#1^{\\mathrm{th}}}', 1],
      'ith': '\\supth{i}',
      'fmGenericOptionPayoff': ['\\ensuremath{ \\fmMax{#1 - #2, 0} }', 2],
      'fmGenericOptionPayoffWithOverallSign': ['\\ensuremath{ \\fmMax{\\phi \\left( #1 - #2 \\right), 0} }', 2],
      'fmCallOrPutPayoff': '\\ensuremath{ \\fmGenericOptionPayoffWithOverallSign{S}{K} }',
      'fmCallPayoff': '\\ensuremath{ \\fmGenericOptionPayoff{S}{K} }',
      'fmPutPayoff': '\\ensuremath{ \\fmGenericOptionPayoff{K}{S} }',
      'fmAsianCallOrPutPayoff': ['\\ensuremath{ \\fmGenericOptionPayoffWithOverallSign{\\fmAverage{#1}}{K} }', 1],
      'fmAsianCallPayoff': '\\ensuremath{ \\fmGenericOptionPayoff{\\fmAverage{S}}{K} }',
      'fmAsianPutPayoff': '\\ensuremath{ \\fmGenericOptionPayoff{K}{\\fmAverage{S}} }',
      'fmAverageStrikeCallOrPutPayoff': ['\\ensuremath{ \\fmGenericOptionPayoffWithOverallSign{#1}{\\fmAverage{#2}} }', 2],
      'fmLookbackCallPayoff': ['\\ensuremath{ \\fmGenericOptionPayoff{#1}{\\fmMin{#2}} }', 2],
      'fmLookbackPutPayoff': ['\\ensuremath{ \\fmGenericOptionPayoff{\\fmMax{#1}}{#2} }', 2],
      'fmDoubleAverageCallOrPutPayoff': ['\\ensuremath{ \\fmGenericOptionPayoffWithOverallSign{\\fmAverageWithSubscript{1}{#1}}{\\fmAverageWithSubscript{2}{#2}} }', 2],
      'fmLocalFloor': '\\ensuremath{ F_\\fmRoman{local} }',
      'fmGlobalFloor': '\\ensuremath{ F_\\fmRoman{global} }',
      'fmLocalCap': '\\ensuremath{ C_\\fmRoman{local} }',
      'fmCliquetPayoffHelper': '\\ensuremath{ \\fmMinOfTwoElements{\\fmLocalCap}{\\phi \\, C \\left( R_i - K \\right)} }',
      'fmNapoleonPayoffHelper': '\\ensuremath{ C_0 +C \\min_{j=1}^k R_j  }',
      'fmBlackScholesCumNormArgPlus': '\\ensuremath{  \\frac{ \\log \\left( S/K \\right) + \\left( r-q + \\sigma^2 \\tau/2 \\right) }{ \\sigma\\sqrt\\tau } }',
      'fmBlackScholesCumNormArgMinus': '\\ensuremath{ \\frac{ \\log \\left( S/K \\right) + \\left( r-q - \\sigma^2 \\tau/2 \\right) }{ \\sigma\\sqrt\\tau } }',
      'fmBlackScholesCallPrice': '\\ensuremath{ e^{-r\\tau} \\left( S e^{(r-q)\\tau} \\fmCumulativeNormal{\\fmBlackScholesCumNormArgPlus} - K \\fmCumulativeNormal{\\fmBlackScholesCumNormArgMinus} \\right) }',
      'fmBlackCumNormArgPlus': '\\ensuremath{ \\frac{\\log\\left(F/K\\right) + \\sigma^2\\tau/2}{\\sigma\\sqrt\\tau} }',
      'fmBlackCumNormArgMinus': '\\ensuremath{ \\frac{\\log\\left(F/K\\right) - \\sigma^2\\tau/2}{\\sigma\\sqrt\\tau} }',
      'fmBlackCallPrice': '\\ensuremath{ e^{-r\\tau} \\left( F \\fmCumulativeNormal{\\fmBlackCumNormArgPlus}-K \\fmCumulativeNormal{\\fmBlackCumNormArgMinus} \\right) }',
      'fmDividendsTblInfo': 'The dividends can be entered either as discrete values or a dividend yield (either as a single rate, or as a discount factor curve). If the former, they can be entered as absolute amounts or as relative amounts (as a percentage of the forward asset price on the dates that the payments are made). ',
      'fmRepoRateInfo': 'The repo rate represents the rate of a ``repurchase agreement\'\' that is usually necessary when short selling the underlying asset. The repo spread input can be entered as a single rate or a discount factor curve. ',
      'fmSmoothingParameterInfo': 'Since the payoff of the option is discontinuous, it is difficult to get accurate value(s) for the Greeks when using Monte Carlo simulation unless some sort of smoothing is applied. For these functions, the user can thus enter a ``smoothing parameter\'\' which is used to smooth out the discontinuity in the payoff. The sensitivity of the option price to the value of this parameter is also returned by these functions.',
      'KVar': '\\ensuremath{K_{\\Var}}',
      'EZVarZT': '\\ensuremath{\\expectsub{t_0}{\\SigmaZT^2}}',
      'EVVarZT': '\\ensuremath{\\expectsub{t_v}{\\SigmaZT^2}}',
      'EVVarVT': '\\ensuremath{\\expectsub{t_v}{\\SigmaVT^2}}',
      'Ftn': '\\ensuremath{F_{t_n}}',
      'NSum': '\\ensuremath{\\sum_{n=1}^{N}}',
      'LogDailyReturn': '\\ensuremath{\\log\\left(\\frac{S_{t_n}}{S_{t_{n-1}}}\\right)}',
      'AnnualizedRealizedVariance': '\\ensuremath{\\frac{1}{T-t_0}\\int_{t_0}^T \\sigma^2(t)\\, \\deriv{t}}',
      'DiscretizedAnnualizedRealizedVariance': '\\ensuremath{A\\NSum\\left(\\LogDailyReturn\\right)^2}',
      'VarianceSwapPayoff': '\\ensuremath{10,000\\,N\\cdot\\left(\\SigmaZT^2-\\KVar\\right)}',
      'Vol': '\\ensuremath{\\fmRoman{Vol}}',
      'KVol': '\\ensuremath{K_{\\Vol}}',
      'SigmaZT': '\\ensuremath{\\Sigma_{[t_0,T]}}',
      'SigmaVT': '\\ensuremath{\\Sigma_{[t_v,T]}}',
      'SigmaZV': '\\ensuremath{\\Sigma_{[t_0,t_v]}}',
      'SigmaDV': '\\ensuremath{\\Sigma^{dv}(\\tau,T,X,V)}',
      'SigmaDS': '\\ensuremath{\\Sigma^{ds}(\\tau,T,X,V)}',
      'GeneralSigmaZT': '\\ensuremath{\\Sigma_{[t_0,T],\\Ftn}}',
      'GeneralTimeI': '\\ensuremath{I_{[t_0,T],\\Ftn}}',
      'EVVolZT': '\\ensuremath{\\expectsub{t_v}{\\SigmaZT}}',
      'EVVolVT': '\\ensuremath{\\expectsub{t_v}{\\SigmaVT}}',
      'VolatilitySwapPayoff': '\\ensuremath{100\\,N\\cdot\\left(\\SigmaZT-\\KVol\\right)}',
      'LognormalProcess': '\\ensuremath{\\deriv{S}(t) = \\mu(t) S(t)\\,\\deriv{t}+\\sigma(t) S(t)\\,\\deriv{W}(t)}',
      'LognormalProcessWithLogS': '\\ensuremath{\\deriv{(\\log S(t))}=\\left( \\mu-\\frac{1}{2}\\sigma^2 \\right)\\,\\deriv{t}+\\sigma \\,\\deriv{W}(t)}',
      'fmLognormalProcessForForward': '\\ensuremath{\\deriv{F}(t) = \\sigma(t) F(t)\\,\\deriv{W}(t)}',
      'fmLognormalProcessForManyForwards': '\\ensuremath{ \\begin{aligned} \\deriv F^{(1)}(t) &= B_{11}(t) F^{(1)}(t) \\deriv W^{(1)}(t) + B_{12}(t) F^{(2)}(t)\\deriv W^{(2)}(t) + \\dots + B_{1n}(t) F^{(m)}(t) \\deriv W^{(m)}(t),\\\\ \\deriv F^{(2)}(t) &= B_{21}(t) F^{(1)}(t) \\deriv W^{(1)}(t) + B_{22}(t) F^{(2)}(t)\\deriv W^{(2)}(t) + \\dots + B_{2n}(t) F^{(m)}(t) \\deriv W^{(m)}(t),\\\\ \\vdots \\quad      & \\qquad \\vdots \\qquad \\quad \\qquad \\quad \\qquad \\vdots \\quad\\qquad \\qquad \\qquad \\qquad \\qquad \\vdots \\\\ \\deriv F^{(m)}(t) &= B_{m1}(t) F^{(1)}(t) \\deriv W^{(1)}(t) + B_{m2}(t) F^{(2)}(t)\\deriv W^{(2)}(t) + \\dots + B_{mm}(t) F^{(m)}(t) \\deriv W^{(m)}(t), \\end{aligned} }',
      'fmLognormalForwardPrice': '\\ensuremath{ F_i(t_i) = F_i(t_{i-1}) e^{ \\sigma_i \\sqrt{\\tau_i} x_i - \\frac{1}{2} \\sigma_i^2 \\tau_i } }',
      'fmShiftedLognormalProcessForForward': '\\ensuremath{\\deriv{F}(t) = \\sigma(t) \\left( F(t) - \\alpha \\right)\\,\\deriv{W}(t) }',
      'fmShiftedLognormalForwardPrice': '\\ensuremath{ F_i(t_i) = \\alpha_i + \\left( F_i(t_{i-1}) - \\alpha_i \\right) e^{\\sigma_i \\sqrt{\\tau_i} x_i - \\frac{1}{2} \\sigma_i^2 \\tau_i} }',
      'fmNormalProcessForForward': '\\ensuremath{\\deriv{F}(t) = \\sigma(t) \\,\\deriv{W}(t)}',
      'fmNormalForwardPrice': '\\ensuremath{ F_i(t_i) = F_i(t_{i-1}) + \\sigma_i \\sqrt{\\tau_i} x_i }',
      'fmCEVProcessForForward': '\\ensuremath{ \\deriv{F}(t) = \\sigma(t) F^\\beta(t) \\,\\deriv{W}(t) }',
      'fmCEVTransitionProb': '\\ensuremath{ \\begin{aligned} & \\prob{F_{t_i}(t_i) \\le x_i \\left| F_{t_{i-1}}(t_{i-1}) \\right.}  = \\\\ & \\chi^2 \\left( \\frac{ x_i^{2(1-\\beta_i)} }{ \\sigma_i^2\\tau_i(1-\\beta_i)^2 } ; \\frac{ 1-2\\beta_i }{ 1-\\beta_i } , \\left( F_{t_{i-1}}(t_{i-1}) \\frac{ F_{t_i}(t_0) }{ F_{t_{i-1}}(t_0) } \\right)^{2(1-\\beta_i)} \\frac{1}{\\sigma_i^2\\tau_i(1-\\beta_i)^2} \\right) \\end{aligned} }',
      'fmCEVTransitionProbForFirstTimeStep': '\\ensuremath{ \\prob{F_{t_1}(t_1) \\le x_1 \\left| F_{t_1}(t_0) \\right.} = \\chi^2 \\left( \\frac{ x_1^{2(1-\\beta_1)} }{ \\sigma_1^2\\tau_1(1-\\beta_1)^2 } ; \\frac{ 1-2\\beta_1 }{ 1-\\beta_1 } , \\frac{ \\left( F_{t_1}(t_0) \\right)^{2(1-\\beta_1)} }{ \\sigma_1^2\\tau_1(1-\\beta_1)^2 } \\right) }',
      'fmHestonModelForForward': '\\ensuremath{ \\begin{aligned} \\deriv{F} &= F \\sqrt{V} \\deriv{W}_F, \\\\ \\deriv{V} & = \\kappa (V_\\infty-V) \\deriv{t} + \\omega \\sqrt{V} \\deriv{W}_V, \\\\ \\deriv{W_F} \\deriv{W}_V & = \\rho \\, \\deriv{t}, \\end{aligned} }',
      'fmHestonModelInLogCoordinatesWithIndependentBrownianMotions': '\\ensuremath{ \\begin{aligned} \\label{eqn:Xsde} \\deriv{X} & = -\\frac{1}{2} V \\deriv{t} + \\sqrt{V} \\left( \\rho \\, \\deriv{\\hat{W}}_X + \\sqrt{1-\\rho^2} \\deriv{\\hat{W}}_V \\right), \\\\ \\deriv{V} &= \\kappa (V_\\infty - V) \\deriv{t} + \\omega \\sqrt{V} \\deriv{\\hat{W}}_V, \\end{aligned} }',
      'IntegratedVol': '\\ensuremath{ \\sqrt{ \\frac{1}{\\tau_i} \\int_{t_{i-1}}^{t_i} \\sigma^2(t) \\deriv{t}} }',
      'SerialCorrelations': '\\ensuremath{ \\rho_{i,i+1} = \\frac{\\sigma_i}{\\sigma_{i+1}} \\sqrt{\\frac{t_i}{t_{i+1}}} }',
      'fmCovarianceMatrix': '\\ensuremath{\\Sigma_{ab}(t) = \\sigma_a(t) \\sigma_b(t) \\rho_{ab} }',
      'inv': ['\\ensuremath{{#1}^{-1}}', 1],
      'expect': ['\\ensuremath{ \\mathbb{E} \\left[{#1}\\right] }', 1],
      'expectc': ['\\ensuremath{ \\mathbb{E} \\left[{#1}|{#2}\\right] }', 2],
      'expectsub': ['\\ensuremath{ \\mathbb{E}_{#1} \\left[{#2}\\right] }', 2],
      'expectsup': ['\\ensuremath{ \\mathbb{E}^{#1} \\left[{#2}\\right] }', 2],
      'var': ['\\ensuremath{\\fmRoman{Var} \\left[{#1}\\right] }', 1],
      'Var': '\\ensuremath{\\fmRoman{Var}}',
      'prob': ['\\ensuremath{ \\fmRoman{P} \\left[{#1}\\right]}', 1],
      'indicator': ['\\ensuremath{ \\mathbb{I} \\left({#1}\\right) }', 1],
      'fmCumulativeNormal': ['\\ensuremath{ N \\left( #1 \\right) }', 1],
      'fmCumulativeNormalDefinition': ['\\ensuremath{ \\frac{1}{2\\pi} \\int_{-\\infty}^{#1} e^{-x^2/2} \\fmRoman{d} x }', 1],
      'deriv': ['\\ensuremath{{\\fmRoman{d}}#1}', 1],
      'vecderiv': ['\\ensuremath{{\\fmRoman{\\textbf{d}}}{\\textbf{#1}}}', 1],
      'pfrac': ['\\ensuremath{\\frac{\\partial #1}{\\partial #2}}', 2],
      'realpart': ['\\ensuremath{\\Re\\left[ #1 \\right]}', 1],
      'imagpart': ['\\ensuremath{\\Im\\left[ #1 \\right]}', 1],
      'arcsinh': '\\ensuremath{\\mathop{\\fmRoman{arcsinh}}}',
      'arccosh': '\\ensuremath{\\mathop{\\fmRoman{arccosh}}}',
      'arctanh': '\\ensuremath{\\mathop{\\fmRoman{arctanh}}}',
      'cald': '\\ensuremath{{\\cal D}}',
      'calf': '\\ensuremath{{\\cal F}}',
      'calg': '\\ensuremath{{\\cal G}}',
      'calh': '\\ensuremath{{\\cal H}}',
      'calx': '\\ensuremath{{\\cal X}}',
      'caly': '\\ensuremath{{\\cal Y}}',
      'calz': '\\ensuremath{{\\cal Z}}',
      'lossDensityVar': ' \\ensuremath{p} ',
      'cumLossDensityVar': ' \\ensuremath{P} ',
      'defNotDensityVar': ' \\ensuremath{g} ',
      'cumDefNotDensityVar': ' \\ensuremath{G} ',
      'densityInX': [' \\ensuremath{ #1(#2,#3)} ', 3],
      'densityInXAndTime': [' \\ensuremath{\\pfrac{\\densityInX{#1}{#2}{#3}}{#4} } ', 4],
      'cumXDensity': [' \\ensuremath{ #1(#2,#3)} ', 3],
      'poolXIntegral': [' \\ensuremath{ \\int_{#2}^{#3} \\deriv{x}\\ x\\ \\densityInX{#1}{x}{t} } ', 3],
      'unitXIntegral': [' \\ensuremath{ \\int_{#2}^{#3} \\deriv{x} \\int_{#4}^{#5} \\deriv{u} \\dfcurvei{u} \\densityInXAndTime{#1}{x}{u}{u} } ', 5],
      'timeXIntegral': [' \\ensuremath{ \\int_{#2}^{#3} \\deriv{x} \\int_{#4}^{#5} \\deriv{u}\\ u \\dfcurvei{u} \\densityInXAndTime{#1}{x}{u}{u} } ', 5],
      'densityInLoss': [' \\ensuremath{ \\densityInX{\\lossDensityVar}{#1}{#2}} ', 2],
      'densityInDefNotional': [' \\ensuremath{ \\densityInX{\\defNotDensityVar}{#1}{#2}} ', 2],
      'densityInLossAndTime': [' \\ensuremath{ \\densityInXAndTime{\\lossDensityVar}{#1}{#2}{#3}} ', 3],
      'densityInDefNotionalAndTime': [' \\ensuremath{ \\densityInXAndTime{\\defNotDensityVar}{#1}{#2}{#3}} ', 3],
      'cumLossDensity': [' \\ensuremath{ \\cumXDensity{\\cumLossDensityVar}{#1}{#2}} ', 2],
      'cumDefNotionalDensity': [' \\ensuremath{ \\cumXDensity{\\cumDefNotDensityVar}{#1}{#2}} ', 2],
      'poolLossIntegral': [' \\ensuremath{ \\poolXIntegral{\\lossDensityVar}{#1}{#2}} ', 2],
      'poolDefNotionalIntegral': [' \\ensuremath{ \\poolXIntegral{\\defNotDensityVar}{#1}{#2}} ', 2],
      'unitLossIntegral': [' \\ensuremath{ \\unitXIntegral{\\lossDensityVar}{#1}{#2}{#3}{#4}} ', 4],
      'unitDefNotionalIntegral': [' \\ensuremath{ \\unitXIntegral{\\defNotDensityVar}{#1}{#2}{#3}{#4}} ', 4],
      'timeLossIntegral': [' \\ensuremath{ \\timeXIntegral{\\lossDensityVar}{#1}{#2}{#3}{#4}} ', 4],
      'timeDefNotionalIntegral': [' \\ensuremath{ \\timeXIntegral{\\defNotDensityVar}{#1}{#2}{#3}{#4}} ', 4],
      'attach': [' \\ensuremath{#1} ', 1],
      'detach': [' \\ensuremath{#1} ', 1],
      'multipleEventCreditTranchePoolFormulaUnsimplified': '\\ensuremath{ \\dfcurve \\left( (\\detach\\ - \\attach) \\cumLossDensity{\\attach}{t} + \\int_a^b \\deriv{x} (\\detach\\ - x) \\densityInLoss{x}{t} \\right) } ',
      'multipleEventCreditTranchePoolFormulaSimpler': '\\ensuremath{ \\dfcurve \\left( \\detach\\ \\cumLossDensity{\\detach}{t} - \\attach\\ \\cumLossDensity{\\attach}{t} - \\poolLossIntegral{\\attach}{\\detach} \\right) } ',
      'multipleEventCreditTranchePoolFormula': '\\ensuremath{ \\dfcurve \\int_{\\attach}^{\\detach} \\cumLossDensity{x}{t} \\deriv{x} } ',
      'multipleEventCreditTranchePoolWritedownFormula': ' \\ensuremath{ { 1 - \\left( 1 - (b-a) \\right) \\cumDefNotionalDensity{1-(b-a)}{t} - \\poolDefNotionalIntegral{1-(b-a)}{1}} } ',
      'multipleEventCreditTrancheDefaultFormula': ' \\ensuremath{ \\int_{\\attach}^{\\detach} \\deriv{x} \\int_s^t \\deriv{u}\\ \\dfcurvei{u} \\pfrac{-\\cumLossDensity{x}{u}}{u}  } ',
      'multipleEventCreditTrancheAccrualFormula': ' \\ensuremath{ \\int_{\\attach}^{\\detach} \\deriv{x} \\int_s^t \\deriv{u}\\ \\dfcurvei{u} \\frac{u-s}{t-s} \\pfrac{-\\cumLossDensity{x}{u}}{u}  } ',
      'multipleEventCreditTrancheAccrualWritedownFormula': ' \\ensuremath{ \\int_{1-(b-a)}^{1} \\deriv{x} \\int_s^t \\deriv{u}\\ \\dfcurvei{u} \\frac{u-s}{t-s} \\densityInDefNotionalAndTime{x}{u}{u}  } ',
      'deriv': ['\\ensuremath{{\\fmRoman{d}}#1}', 1],
      'vecderiv': ['\\ensuremath{{\\fmRoman{\\textbf{d}}}{\\textbf{#1}}}', 1],
      'pfrac': ['\\ensuremath{\\frac{\\partial #1}{\\partial #2}}', 2],
      'realpart': ['\\ensuremath{\\Re\\left[ #1 \\right]}', 1],
      'imagpart': ['\\ensuremath{\\Im\\left[ #1 \\right]}', 1],
      'arcsinh': '\\ensuremath{\\mathop{\\fmRoman{arcsinh}}}',
      'arccosh': '\\ensuremath{\\mathop{\\fmRoman{arccosh}}}',
      'arctanh': '\\ensuremath{\\mathop{\\fmRoman{arctanh}}}',
      'df': '\\ensuremath{D}',
      'dfcurvei': ['\\ensuremath{\\df\\left(#1\\right)}', 1],
      'dfcurve': '\\dfcurvei{t}',
      'survival': '\\ensuremath{Q}',
      'survivali': ['\\ensuremath{\\survival_{#1}}', 1],
      'survivalcurve': '\\ensuremath{\\survival\\left(t\\right)}',
      'survivalcurvei': ['\\ensuremath{\\survivali{#2}\\left(#1\\right)}', 2],
      'survivalderiv': '\\ensuremath{\\pfrac{\\survival}{t}}',
      'recoverycurve': ['\\ensuremath{R\\left(#1\\right)}', 1],
      'posPart': ['\\ensuremath{\\max{(#1,0)}}', 1],
      'singleNameCreditSurvivalFormula': '\\ensuremath{\\survivalcurve \\dfcurve}',
      'singleNameCreditDefaultFormula': '\\ensuremath{\\int_0^t \\deriv{u} \\left(-\\survivalderiv\\right)\\left(1-R(u)\\right) \\dfcurvei{u}}',
      'singleNameCreditDefaultPaymentFormula': '\\ensuremath{\\int_{\\posPart{s}}^{\\posPart{t}} \\deriv{u} \\left(-\\survivalderiv\\right) C(u) \\dfcurvei{u}}',
      'singleNameCreditDefaultUnitPaymentFormula': '\\ensuremath{\\int_{\\posPart{s}}^{\\posPart{t}} \\deriv{u} \\left(-\\survivalderiv\\right) \\dfcurvei{u}}',
      'singleNameCreditDefaultRecoveryPaymentFormula': '\\ensuremath{\\int_{\\posPart{s}}^{\\posPart{t}} \\deriv{u} \\left(-\\survivalderiv\\right) R(u) \\dfcurvei{u}}',
      'singleNameCreditAccrualFormula': '\\ensuremath{\\int_{\\posPart{s}}^{\\posPart{t}} \\deriv{u}\\ \\frac{u-s}{t-s}\\left(-\\survivalderiv\\right) \\dfcurvei{u}}',
      'stepInDateFlatRates': '\\ensuremath{d_\\mathrm{step-in}}',
      'adjStepInDateFlatRates': '\\ensuremath{\\bar{d}_\\mathrm{step-in}}',
      'flatHazardRateFormula': '\\ensuremath{ \\frac{1}{\\Delta T_k}  \\log \\frac{\\survival_{k-1}}{\\survival_{k}} }',
      'flatInterestRateFormula': '\\ensuremath{ \\frac{1}{\\Delta T_k}  \\log \\frac{\\df_{k-1}}{\\df_{k}} }',
      'analyticTermFeeLegFormula': '\\ensuremath{\\frac{x + \\frac{1}{\\lambda_k + \\mu_k}}{\\lambda_k + \\mu_k}}',
      'summandFeeLegFormula': '\\ensuremath{\\lambda_k \\left( \\survival_{k-1} \\df_{k-1} \\psi_k(T^j_{k-1}) - \\survival_{k} \\df_{k} \\psi_k(T^j_{k}) \\right)}',
      'commonSummandContingentLegFormula': '\\ensuremath \\frac{\\lambda_k}{\\lambda_k + \\mu_k} \\survival_{k-1} \\df_{k-1} \\left( 1 - \\exp( - ( \\lambda_k + \\mu_k ) \\Delta T_k ) \\right) ',
      'accrualFormulaForFlatRates': '\\ensuremath{ \\frac{1}{\\dfcurve} \\frac{1}{\\Delta T_j} \\sum_{k=1}^{M_f - 1} \\mathrm{I}_{ \\{ d_k^{(f)} > \\adjStepInDateFlatRates \\} } \\Psi_k  }',
      'defaultRecoveryFormulaForFlatRates': '\\ensuremath{ \\frac{1}{\\dfcurve} \\sum_{k=1}^{M_c} \\Gamma_k R_{k-1}  }',
      'defaultUnityFormulaForFlatRates': '\\ensuremath{ \\frac{1}{\\dfcurve} \\sum_{k=1}^{M_c} \\Gamma_k  }',
      'vcds': '\\ensuremath{V_{\\fmRoman{CDS}}}',
      'BasisMap': '\\ensuremath{\\Phi_{\\lambda(t)}}',
      'deriv': ['\\ensuremath{{\\fmRoman{d}}#1}', 1],
      'vecderiv': ['\\ensuremath{{\\fmRoman{\\textbf{d}}}{\\textbf{#1}}}', 1],
      'pfrac': ['\\ensuremath{\\frac{\\partial #1}{\\partial #2}}', 2],
      'realpart': ['\\ensuremath{\\Re\\left[ #1 \\right]}', 1],
      'imagpart': ['\\ensuremath{\\Im\\left[ #1 \\right]}', 1],
      'arcsinh': '\\ensuremath{\\mathop{\\fmRoman{arcsinh}}}',
      'arccosh': '\\ensuremath{\\mathop{\\fmRoman{arccosh}}}',
      'arctanh': '\\ensuremath{\\mathop{\\fmRoman{arctanh}}}',
      'df': '\\ensuremath{D}',
      'dfcurvei': ['\\ensuremath{\\df\\left(#1\\right)}', 1],
      'dfcurve': '\\dfcurvei{t}',
      'df': '\\ensuremath{D}',
      'dfcurvei': ['\\ensuremath{\\df\\left(#1\\right)}', 1],
      'dfcurve': '\\dfcurvei{t}',
      'class': ['{\\texttt{#1}}', 1],
      'function': ['{\\texttt{#1}}', 1],
      'namespace': ['{\\texttt{#1}}', 1],
      'headerfile': ['{\\texttt{#1/#2.hpp}}', 2],
      'code': ['{\\texttt{#1}}', 1],
      'fincad': 'FINCAD',
      'financialcad': 'FinancialCAD',
      'financialcadCorp': '\\financialcad{} Corporation',
      'financialcadCopyright': '\\copyright\\ 2009 \\financialcadCorp{} (``\\fincad{}\'\')',
      'financialcadTrademark': '\\financialcad{}\\textsuperscript{\\textregistered}',
      'fincadTrademark': '\\fincad{}\\textsuperscript{\\textregistered}',
      'fincadAddress': '\\fincad{}\\\\Central City, Suite 1750\\\\13450 102nd Avenue\\\\Surrey, BC V3T 5X3 Canada\\\\[.25cm]or\\\\[.25cm]Block 4, Blackrock Business Park\\\\Carysfort Avenue, Blackrock\\\\Dublin, Ireland',
      'fincadWWW': 'www.fincad.com',
      'fmAnalyticsSuite': ['\\ifthenelse{\\equal{#1}{none}}{\\fincad{} Analytics Suite}{\\fincad{} Analytics Suite #1}', 1],
      'fmAnalyticsSuiteXL': ['\\ifthenelse{\\equal{#1}{none}}{Analytics Suite for Excel}{Analytics Suite #1 for Excel}', 1],
      'fmAnalyticsSuiteDev': ['\\ifthenelse{\\equal{#1}{none}}{Analytics Suite for Developers}{Analytics Suite #1 for Developers}', 1],
      'fmAnalyticsSuiteXLAndDev': ['\\ifthenelse{\\equal{#1}{none}}{\\fincad{} Analytics Suite for Excel and \\fincad{} Analytics Suite for Developers}{\\fincad{} Analytics Suite #1 for Excel and \\fincad{} Analytics Suite #1 for Developers}', 1],
      'fmFrameworkProduct': ['\\ifthenelse{\\equal{#1}{none}}{\\fincad{} Financial Framework}{\\fincad{} Financial Framework #1}', 1],
      'frameworkReferenceManual': '\\fmFrameworkProduct{} Reference Manual',
      'fff': 'F3',
      'fitr': '\\fincad\'s Intermediate Trade Representation',
      'FITR': 'FITR',
      'FLIRST': 'FLIRST',
      'ensuremath': ['#1', 1]
    }
  }
});

MathJax.Ajax.loadComplete("[MathJax]/config/../../mathjax_config.js");

